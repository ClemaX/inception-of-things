require File.join(File.dirname(__FILE__), "..", "lib", "Provisioner")

VAGRANTFILE_API_VERSION = "2"

VM_NAME="#{ENV['USER']}"

VM_RAM_MB=2048
VM_CPUS=4

VM_SUFFIX_SERVER="S"

VM_APPS_PATH="apps"
VM_APPS_MOUNTPOINT="/mnt/apps"

VM_PROVISION_UPGRADE = "provision/apk-upgrade.sh"
VM_PROVISION_DOCKER = "provision/docker.sh"
VM_PROVISION_KUBECTL = "provision/kubectl.sh"
VM_PROVISION_K3D = "provision/k3d.sh"
VM_PROVISION_ARGOCD_CLI = "provision/argocd-cli.sh"

VM_PROVISION_DEPLOY = "provision/deploy.sh"

VM_IP_SUBNET="192.168.56"
VM_IP_HOSTID_BASE=110

SERVER_DEPS = [
	VM_PROVISION_UPGRADE,
	VM_PROVISION_DOCKER,
	VM_PROVISION_KUBECTL,
	VM_PROVISION_K3D,
	VM_PROVISION_ARGOCD_CLI
]

def provision_server(node, config)
	# Share apps with K3S Server
	config.vm.synced_folder VM_APPS_PATH, VM_APPS_MOUNTPOINT, type: "rsync"

	SERVER_DEPS.each do |script|
		config.vm.provision "shell",
			path: script
	end

	config.vm.provision "reload"

	config.vm.provision "shell",
		path: VM_PROVISION_DEPLOY,
		args: [VM_APPS_MOUNTPOINT]
end

nodes = [
	{
		type: "server",
		name: "#{VM_NAME}#{VM_SUFFIX_SERVER}",
	},
]

provisioner = Provisioner.new(VM_IP_SUBNET, VM_IP_HOSTID_BASE)

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	config.vm.box = "generic/alpine318"

        config.vm.provider "virtualbox" do |domain|
          domain.memory = VM_RAM_MB
          domain.cpus = VM_CPUS
        end

	provisioner.provision nodes, config
end

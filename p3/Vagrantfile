require File.join(File.dirname(__FILE__), "..", "lib", "Provisioner")

VAGRANTFILE_API_VERSION = "2"

VM_BOX = "generic/debian12"

VM_NAME = "#{ENV['USER']}"

VM_RAM_MB = 4096
VM_CPUS = 4

VM_SUFFIX_SERVER = "S"

VM_K8S_CONF_PATH = "confs"
VM_K8S_CONF_MOUNTPOINT = "/mnt/apps"

VM_PROVISION_SYSTEM = "scripts/provision.sh"
VM_PROVISION_USER = "scripts/provision_user.sh"

VM_PROVISION_DEPLOY = "scripts/deploy.sh"

VM_IP_SUBNET = "192.168.56"
VM_IP_HOSTID_BASE = 110

SERVER_DEPS_SYSTEM = [
	VM_PROVISION_SYSTEM
]

SERVER_DEPS_USER = [
	VM_PROVISION_USER
]

def provision_server(node, config)
	# Sync K8S config
	config.vm.synced_folder "#{VM_K8S_CONF_PATH}/", "#{VM_K8S_CONF_MOUNTPOINT}/",
		type: "rsync",
		create: true

	SERVER_DEPS_SYSTEM.each do |script|
		config.vm.provision "shell",
			path: script
	end

	SERVER_DEPS_USER.each do |script|
		config.vm.provision "shell",
			privileged: false,
			path: script
	end

	config.vm.provision "reload"

	config.vm.provision "shell",
		path: VM_PROVISION_DEPLOY,
		args: [VM_K8S_CONF_MOUNTPOINT]
end

nodes = [
	{
		type: "server",
		name: "#{VM_NAME}#{VM_SUFFIX_SERVER}",
	},
]

provisioner = Provisioner.new(VM_IP_SUBNET, VM_IP_HOSTID_BASE)

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	config.vm.box = VM_BOX

        config.vm.provider "virtualbox" do |domain|
          domain.memory = VM_RAM_MB
          domain.cpus = VM_CPUS
        end

	provisioner.provision nodes, config
end
